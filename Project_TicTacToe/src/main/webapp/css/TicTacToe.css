@charset "ISO-8859-1";
html{
	height:100%;
}

.container{
	height: 100%;
}

body {

    background-image: url(../media/background.svg);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
}

header {
    height: 15%;
    overflow: hidden;
    /* Hide any part of the image that overflows */
    box-sizing: border-box;
    margin-bottom: 2%;
    display: flex;
    justify-content: center;
}

#title {
    width: auto;
  	/* Scale the image to fit the container's width */
    height: auto;
    /* Maintain the image's aspect ratio */
    object-fit: contain;
    /* Keep the image within the container without distorting it */
    box-sizing: border-box;
    display: inline-block;
}

main {
    margin-bottom: 2%;
    height: 74%;
}

footer {
    height: 5%;
}


.sideBtn {
    border: none;
    background-color: transparent;
}

#imgNewGame {
    background-size: cover;
    /* Resize the image to cover the entire button */
    background-position: center;
    /* Center the image within the button */
    background-repeat: no-repeat;
    /* Prevent the image from repeating */
    max-width: 80%;
    /* Occupy up to 80% of the container's available width */
    cursor: pointer;
    /* Change the cursor when hovering over the button */
}

.sideImg {
    background-size: cover;
    /* Resize the image to cover the entire button */
    background-position: center;
    /* Center the image within the button */
    background-repeat: no-repeat;
    /* Prevent the image from repeating */
    max-width: 50%;
    /* Occupy up to 50% of the container's available width */
    cursor: pointer;
    /* Change the cursor when hovering over the button */
}

.tab {
    height: 100%;
    box-shadow: 0px 4px 8px black;
}

#row1,
#row2,
#row3 {
    height: 32.33%;
}

#row1 .col-4,
#row2 .col-4,
#row3 .col-4 {
    position: relative;
    padding-right: 3.5%;
    box-sizing: border-box;
}

/* Simulate the border with a pseudo-element */
#row1 .col-4::after,
#row2 .col-4::after,
#row3 .col-4::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 3.5%;
    height: 100%;
    background-color: black;
}

/* Remove the border from the last column */
#row1 .col-4:last-child::after,
#row2 .col-4:last-child::after,
#row3 .col-4:last-child::after {
    display: none;
}

.borderBottom {
    height: 1.5%;
    background-color: black;
}

.tap {
    position: relative;
    /* Required for positioning the pseudo-element */
    height: 100%;
    width: 100%;
    border: none;
    padding: 0;
    background-color: transparent;
    transition: background-color 0.3s, color 0.3s;
    overflow: hidden;
    /* Ensures the X does not overflow the div boundaries */
}

/* Adds an X on hover */
.tap::before {
    content: "";
    /* Removes textual content */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* Centers the image */
    width: 50px;
    /* Width of the image */
    height: 50px;
    /* Height of the image */
    background-image: url('../media/X.png');
    /* Path to the image */
    background-size: contain;
    /* Ensures the image fits the area */
    background-repeat: no-repeat;
    /* Prevents image repetition */
    opacity: 0;
    /* Image is invisible by default */
    transition: opacity 0.3s;
    /* Transition for the appearance of the image */
}

/* Shows the X on hover */
.tap:hover::before {
    opacity: 1;
    /* Makes the X visible on hover */
}

.added-x {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* Centers the image */
    width: 50px;
    /* Image size */
    height: 50px;
    /* Image size */
    opacity: 0;
    /* Image is invisible by default */
    transition: opacity 0.3s;
    /* Transition for the appearance of the image */
}

.tapped {
    width: 80%;
}

.score {
    font-weight: bold;
}

/* Diagonal fade-out animation */
@keyframes fadeOutOblique {
    from {
        opacity: 1;
        transform: translateX(0) translateY(0);
    }

    to {
        opacity: 0;
        transform: translateX(-100px) translateY(-100px);
        /* Adjust values for the desired effect */
    }
}

/* Class to apply the animation */
.fade-out {
    animation: fadeOutOblique 0.5s forwards;
    /* Animation duration and keep final state */
}

/* Optional: Ensure elements cannot be clicked during animation */
.fade-out * {
    pointer-events: none;
}

/* Style for the Win/defeat/draw status message */
.status-message {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.5);
    /* Semi-transparent background */
    z-index: 1;
    /* Ensure it is above everything else */
}

/* Status message image (Win/defeat/draw) */
.status-message img {
    max-width: 100%;
    max-height: 100%;
    cursor: pointer;
    /* Changes cursor to indicate it is clickable */
}

/* Class to hide the Win/defeat/draw status message */
.hidden {
    display: none;
}

/* Login div */
#divLogin {
    display: none;
    background-color: rgb(211, 211, 211);
    position: fixed;
    z-index: 1;
    height: 45%;
    width: 20%;
    border-radius: 5%;
}

/* Register div */
#divRegister {
    display: none;
    background-color: rgb(211, 211, 211);
    position: fixed;
    z-index: 2;
    height: 55%;
    width: 20%;
    border-radius: 5%;
}

.pError {
    color: red;
}